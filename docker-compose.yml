services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - REDIS_URL=${REDIS_URL}   # ✅ Adicionando a URL completa
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - USE_SANDBOX=${USE_SANDBOX}
      - SICREDI_ENV=${SICREDI_ENV}
      - WEBHOOK_PIX=${WEBHOOK_PIX}  # ✅ ADICIONADO AQUI
    depends_on:
      redis:
        condition: service_healthy  # ✅ Aguarda o Redis ficar pronto
    command: 
      - poetry
      - run
      - uvicorn
      - payment_kode_api.app.main:app
      - --host
      - 0.0.0.0
      - --port
      - "8000"

  redis:
    image: redis:latest
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    healthcheck:  # ✅ Garante que o Redis está pronto antes de iniciar os outros serviços
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - REDIS_URL=${REDIS_URL}  # ✅ Adicionando a URL completa
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - USE_SANDBOX=${USE_SANDBOX}
      - SICREDI_ENV=${SICREDI_ENV}
      - WEBHOOK_PIX=${WEBHOOK_PIX}  # ✅ ADICIONADO AQUI
    depends_on:
      redis:
        condition: service_healthy  # ✅ Aguarda o Redis ficar pronto
    command: 
      - poetry
      - run
      - celery
      - -A
      - payment_kode_api.app.workers
      - worker
      - --loglevel=info
      - --concurrency=4
