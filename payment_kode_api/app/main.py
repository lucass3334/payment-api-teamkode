from fastapi import FastAPI
from payment_kode_api.app.routes import payments_router, webhooks_router, empresas_router  # ‚úÖ Importa√ß√£o correta das rotas
from payment_kode_api.app.config import settings
from payment_kode_api.app.error_handlers import add_error_handlers
from payment_kode_api.app.utilities.logging_config import logger

def create_app() -> FastAPI:
    """
    Inicializa e retorna a aplica√ß√£o FastAPI configurada.
    """
    debug_mode = settings.DEBUG if isinstance(settings.DEBUG, bool) else str(settings.DEBUG).lower() in ["true", "1"]  # üîπ Corrige `DEBUG`

    app = FastAPI(
        title=settings.APP_NAME if hasattr(settings, "APP_NAME") else "Payment Kode API",
        version="0.0.1",
        description="API para gest√£o de pagamentos com fallback entre gateways",
        debug=debug_mode,  # ‚úÖ Corrige poss√≠vel erro de tipo
    )

    # Inclui as rotas
    app.include_router(payments_router, prefix="/payments", tags=["Pagamentos"])
    app.include_router(webhooks_router, prefix="/webhooks", tags=["Webhooks"])
    app.include_router(empresas_router, prefix="/empresas", tags=["Empresas"])  # ‚úÖ Garante que rota de empresas est√° inclu√≠da

    # Adiciona handlers de erro
    add_error_handlers(app)

    @app.on_event("startup")
    async def startup_event():
        """
        Inicializa configura√ß√µes necess√°rias no startup.
        """
        if not logger:
            from payment_kode_api.app.utilities.logging_config import logger  # üîπ Garante que logger est√° carregado
        
        logger.info("üöÄ Aplica√ß√£o iniciando...")
        logger.info(f"‚úÖ API `{app.title}` vers√£o `{app.version}` inicializada com sucesso!")
        logger.info(f"üîß Modo Debug: {'Ativado' if app.debug else 'Desativado'}")

    @app.get("/", tags=["Health Check"])
    async def health_check():
        """
        Verifica o status da aplica√ß√£o.
        """
        return {"status": "OK", "message": "Payment Kode API funcionando!"}

    return app

# Inst√¢ncia global da aplica√ß√£o para importa√ß√£o
app = create_app()

__all__ = ["app", "create_app"]
