#!/bin/bash
set -e  # Faz o script falhar imediatamente se um comando falhar

echo "üîÑ Inicializando entrypoint..."

# ‚úÖ Verifica se as vari√°veis de ambiente est√£o carregadas
if [[ -z "$SUPABASE_URL" || -z "$SUPABASE_KEY" ]]; then
    echo "‚ùå ERRO: SUPABASE_URL ou SUPABASE_KEY n√£o foram definidas!"
    exit 1
fi

# üîÑ **Aguarda o Redis estar pronto**
echo "üîÑ Aguardando Redis estar dispon√≠vel..."
RETRIES=10
while [[ $RETRIES -gt 0 ]]; do
    if redis-cli -h "$REDIS_HOST" -p "$REDIS_PORT" --tls --user "$REDIS_USERNAME" --pass "$REDIS_PASSWORD" ping | grep -q "PONG"; then
        echo "‚úÖ Redis est√° pronto!"
        break
    fi
    echo "‚è≥ Redis ainda n√£o est√° pronto... Tentando novamente em 5 segundos. Tentativas restantes: $RETRIES"
    sleep 5
    ((RETRIES--))
done

if [[ $RETRIES -eq 0 ]]; then
    echo "‚ùå ERRO: Redis n√£o respondeu ap√≥s v√°rias tentativas!"
    exit 1
fi

# üîÑ **Verificando conex√£o com Supabase**
echo "üîÑ Verificando conex√£o com Supabase..."
SUPABASE_STATUS=0
SUPABASE_RETRIES=6
while [[ $SUPABASE_RETRIES -gt 0 ]]; do
    SUPABASE_STATUS=$(curl -s -o response.json -w "%{http_code}" "$SUPABASE_URL/rest/v1/" --header "apikey: $SUPABASE_KEY")
    
    # Verifica se recebeu um status HTTP v√°lido e o JSON de resposta
    if [[ "$SUPABASE_STATUS" -eq 200 ]] && grep -q "swagger" response.json; then
        echo "‚úÖ Supabase est√° acess√≠vel!"
        break
    fi

    echo "‚è≥ Supabase ainda n√£o est√° pronto (C√≥digo HTTP: $SUPABASE_STATUS). Tentando novamente em 5 segundos..."
    sleep 5
    ((SUPABASE_RETRIES--))
done

if [[ $SUPABASE_RETRIES -eq 0 ]]; then
    echo "‚ùå ERRO: Supabase n√£o respondeu corretamente ap√≥s v√°rias tentativas!"
    exit 1
fi

# üî• **Inicia o servi√ßo corretamente**
if [[ "$1" == "worker" ]]; then
    echo "üöÄ Iniciando Celery Worker..."
    exec poetry run celery -A payment_kode_api.app.workers.tasks worker --loglevel=info --concurrency=4
else
    echo "üöÄ Iniciando API Web..."
    exec poetry run uvicorn payment_kode_api.app.main:app --host 0.0.0.0 --port 8000
fi
